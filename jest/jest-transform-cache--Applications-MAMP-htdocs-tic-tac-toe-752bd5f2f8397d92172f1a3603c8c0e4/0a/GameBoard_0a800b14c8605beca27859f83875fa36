/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_GameButton = require('./GameButton'); /* istanbul ignore next */var _GameButton2 = _interopRequireDefault(_GameButton);
/* istanbul ignore next */require('../../styles/game/GameBoard.scss'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}function _possibleConstructorReturn(self, call) {if (!self) {throw new ReferenceError("this hasn't been initialised - super() hasn't been called");}return call && (typeof call === "object" || typeof call === "function") ? call : self;}function _inherits(subClass, superClass) {if (typeof superClass !== "function" && superClass !== null) {throw new TypeError("Super expression must either be null or a function, not " + typeof superClass);}subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } });if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;}var

GameBoard = function (_Component) {_inherits(GameBoard, _Component);
  function /* istanbul ignore next */GameBoard(props) {/* istanbul ignore next */_classCallCheck(this, GameBoard);return _possibleConstructorReturn(this, (GameBoard.__proto__ || Object.getPrototypeOf(GameBoard)).call(this,
    props));
  }_createClass(GameBoard, [{ key: 'render', value: function render()

    {/* istanbul ignore next */var _props =
      this.props,game = _props.game,onClickButton = _props.onClickButton;

      var buttons = game.board.map(function (value, index) {
        console.log(value);
        return (
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_GameButton2.default, /* istanbul ignore next */{
            key: 'button_' + index,
            index: index,
            label: value,
            onClickButton: onClickButton }));

      });

      // let buttons = [];
      // for(var i = 0; i < game.board.length; i ++) {
      //   buttons.push(
      //     <GameButton
      //       key={'button_' + i}
      //       onClickButton={onClickButton} />
      //   );
      // }
      return (
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'game-board' },
          buttons));


    } }]);return GameBoard;}(_react.Component);
;

GameBoard.propTypes = {
  game: /* istanbul ignore next */_react.PropTypes.object,
  onClickButton: /* istanbul ignore next */_react.PropTypes.func }; /* istanbul ignore next */exports.default =


GameBoard;