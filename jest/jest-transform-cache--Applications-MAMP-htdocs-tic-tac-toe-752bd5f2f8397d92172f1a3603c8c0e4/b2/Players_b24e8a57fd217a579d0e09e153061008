/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var _createClass = function () {function defineProperties(target, props) {for (var i = 0; i < props.length; i++) {var descriptor = props[i];descriptor.enumerable = descriptor.enumerable || false;descriptor.configurable = true;if ("value" in descriptor) descriptor.writable = true;Object.defineProperty(target, descriptor.key, descriptor);}}return function (Constructor, protoProps, staticProps) {if (protoProps) defineProperties(Constructor.prototype, protoProps);if (staticProps) defineProperties(Constructor, staticProps);return Constructor;};}();function _toConsumableArray(arr) {if (Array.isArray(arr)) {for (var i = 0, arr2 = Array(arr.length); i < arr.length; i++) {arr2[i] = arr[i];}return arr2;} else {return Array.from(arr);}}function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError("Cannot call a class as a function");}}var INITIAL_STATE = { name: '', wins: 0, loses: 0, draws: 0 }; /* istanbul ignore next */var

Players = function () {
  function /* istanbul ignore next */Players() {/* istanbul ignore next */_classCallCheck(this, Players);
    this.players = [];
  }_createClass(Players, [{ key: 'insertPlayer', value: function insertPlayer(

    player) {
      this.players = /* istanbul ignore next */[].concat(_toConsumableArray(this.players), [Object.assign({}, INITIAL_STATE, { name: player })]);
    } }, { key: 'insertPlayers', value: function insertPlayers(

    playerX, playerO) {
      insertPlayer(playerX);
      insertPlayer(playerO);
    } }]);return Players;}(); /* istanbul ignore next */exports.default =


Players;