/* istanbul ignore next */'use strict';Object.defineProperty(exports, "__esModule", { value: true });var /* istanbul ignore next */_react = require('react'); /* istanbul ignore next */var _react2 = _interopRequireDefault(_react);
var /* istanbul ignore next */_LeaderboardTr = require('./LeaderboardTr'); /* istanbul ignore next */var _LeaderboardTr2 = _interopRequireDefault(_LeaderboardTr);
/* istanbul ignore next */require('../../styles/game/Leaderboard.scss'); /* istanbul ignore next */function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

/*
                                                                                                                                                                                                  * Stateless component responsible for render the Leaderboard
                                                                                                                                                                                                  */
var Leaderboard = function Leaderboard( /* istanbul ignore next */_ref) {/* istanbul ignore next */var allPlayers = _ref.allPlayers;
  var playersItens = /* istanbul ignore next */void 0;
  if (allPlayers && allPlayers.length > 0) {
    var orderedPlayers = allPlayers.sort(function (a, b) {
      var scoreA = parseInt(a.wins) * 3 + parseInt(a.draws) - parseInt(a.defeats),
      scoreB = parseInt(b.wins) * 3 + parseInt(b.draws) - parseInt(b.defeats);

      return scoreB - scoreA;
    });

    playersItens = orderedPlayers.map(function (value, index) {
      return (
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */_LeaderboardTr2.default, /* istanbul ignore next */{
          key: 'leaderboard_' + index,
          position: index + 1,
          name: value.name,
          wins: value.wins,
          defeats: value.defeats,
          draws: value.draws }));

    });
  }

  return (
    /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'div', /* istanbul ignore next */{ className: 'leaderboard' },
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'h4', /* istanbul ignore next */{ className: 'title' }, /* istanbul ignore next */'Leaderboard'),
      /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'table', /* istanbul ignore next */{ cellPadding: '0', cellSpacing: '0' },
        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'thead', /* istanbul ignore next */null,
          /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'tr', /* istanbul ignore next */{ className: 'heading' },
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'th', /* istanbul ignore next */{ colSpan: '2', className: 'name' }, /* istanbul ignore next */'Name'),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'th', /* istanbul ignore next */{ className: 'wins' }, /* istanbul ignore next */'Wins'),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'th', /* istanbul ignore next */{ className: 'defeats' }, /* istanbul ignore next */'Defeats'),
            /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'th', /* istanbul ignore next */{ className: 'draws' }, /* istanbul ignore next */'Draws'))),


        /* istanbul ignore next */_react2.default.createElement( /* istanbul ignore next */'tbody', /* istanbul ignore next */null,
          playersItens))));




};

Leaderboard.propTypes = {
  allPlayers: /* istanbul ignore next */_react.PropTypes.array }; /* istanbul ignore next */exports.default =


Leaderboard;