/* istanbul ignore next */'use strict';var /* istanbul ignore next */_Game = require('./Game'); /* istanbul ignore next */var _Game2 = _interopRequireDefault(_Game);function _interopRequireDefault(obj) {return obj && obj.__esModule ? obj : { default: obj };}

// Game class is responsible for control the game
// CONTRACTS
// Should have a initial state
// Should start the game
// Should change the game status
// Should create the board with empty spaces
// Should set the first player turn
// Should allow to register moves only to empty cells
// Should save the players moves on the board and check if the game is finished
// If is finished
// Should return the winner and loser names or return if is a draw
// Should return the game result
// If is not finished
// Should increase the move counter
// Should alternate the players turns
// Should check if the game is finished after 5 moves
// Should set the result - who is the winner and loser or return if is a draw
// Should reset the game

describe('Game', function () {
  var GameApi = /* istanbul ignore next */void 0;

  beforeEach(function () {
    GameApi = new /* istanbul ignore next */_Game2.default();
  });

  it('Api exist', function () {
    expect(GameApi).toBeDefined();
  });

  it('constructor', function () {
    expect(GameApi.board).toEqual([]);
    expect(GameApi.grid).toEqual(3);
    expect(GameApi.movesCounter).toEqual(0);
    expect(GameApi.result).toEqual({});
    expect(GameApi.status).toEqual('waiting');
    expect(GameApi.turn).toEqual('');
  });

  it('startGame', function () {
    expect(GameApi.startGame).toBeDefined();

    GameApi.startGame();
    expect(GameApi.status).toEqual('running');
  });

  it('changeGameStatus', function () {
    expect(GameApi.changeGameStatus).toBeDefined();
  });

  it('emptyBoard', function () {
    expect(GameApi.emptyBoard).toBeDefined();
  });

  it('setTurn', function () {
    expect(GameApi.setTurn).toBeDefined();
  });

  it('isFinished', function () {
    expect(GameApi.isFinished).toBeDefined();
  });

  it('registerMove', function () {
    expect(GameApi.registerMove).toBeDefined();
  });

  it('alternateTurns', function () {
    expect(GameApi.alternateTurns).toBeDefined();
  });

  it('resetGame', function () {
    expect(GameApi.resetGame).toBeDefined();
  });
});